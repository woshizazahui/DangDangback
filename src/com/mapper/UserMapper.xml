<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.entity.User" >
    <id column="ID" property="id" jdbcType="DECIMAL" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    <result column="REGTIME" property="regtime" jdbcType="TIMESTAMP" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="PHONE" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, EMAIL, PASSWORD, NICKNAME, REGTIME, STATE, PHONE
  </sql>
  <update id="updateUserStatus">
  	update t_user
  	<set>
  		<if test='status=="Yes"'>
  			 state='No'
  		</if>
  		<if test='status=="No"'>
  		    state='Yes'
  		</if>
  	</set>
  	where id=#{id}
  </update>
  <select id="selectUsers" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	<![CDATA[
  		select * from(
  		select a.*,rownum rn from
  		(select * from t_user) a
  		where rownum<=#{pageIndex}*5)
  		where rn>(#{pageIndex}-1)*5

  	]]>
 	
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Short" >
    select 
    <include refid="Base_Column_List" />
    from T_USER
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Short" >
    delete from T_USER
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.entity.User" >
    insert into T_USER (ID, EMAIL, PASSWORD, 
      NICKNAME, REGTIME, STATE, 
      PHONE)
    values (#{id,jdbcType=DECIMAL}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{regtime,jdbcType=TIMESTAMP}, #{state,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.User" >
    insert into T_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="nickname != null" >
        NICKNAME,
      </if>
      <if test="regtime != null" >
        REGTIME,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="phone != null" >
        PHONE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.User" >
    update T_USER
    <set >
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        NICKNAME = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="regtime != null" >
        REGTIME = #{regtime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.User" >
    update T_USER
    set EMAIL = #{email,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      NICKNAME = #{nickname,jdbcType=VARCHAR},
      REGTIME = #{regtime,jdbcType=TIMESTAMP},
      STATE = #{state,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>